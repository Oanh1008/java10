package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import com.mysql.cj.conf.url.XDevApiDnsSrvConnectionUrl;
import com.mysql.cj.xdevapi.Statement;

import connection.Dbconnection;
import persistence.ItemGroup;
import persistence.ItemGroupDto;
import utils.SqlUtils;

public class ItemGroupDao {
	private Connection conn;
	private java.sql.Statement st;
	private ResultSet rs;
	private PreparedStatement pst;

	public ItemGroupDao() {
		conn = Dbconnection.getConnection();
	}
/*
 * get all ItemGroup
 */
	public List<ItemGroup> getAll() {
		List<ItemGroup> iGroups = new ArrayList<>();
		String sql = "select MaLoai, TenLoai " + " from loaihang";

		try {
			pst = conn.prepareStatement(sql);

			rs = pst.executeQuery();
			// ResultSet List<T> T: columns alias
			// iterator row by row
			while (rs.next()) {
				ItemGroup ig = new ItemGroup(rs.getInt(1), rs.getString(2));
				iGroups.add(ig);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				SqlUtils.close(rs, st);
			} catch (Exception e) {

				e.printStackTrace();
			}
		}
		return iGroups;
	}

	public ItemGroup getItemGroups(int id) {
		ItemGroup result = null;
		String sql = "select MaLoai, TenLoai " + " from loaihang where MaLoai= ?" ;

		try {
			pst = conn.prepareStatement(sql);
			pst.setInt(1, id);
			rs = pst.executeQuery();
			if (rs.next()) {
				result = new ItemGroup(rs.getInt("MaLoai"), rs.getString("TenLoai"));
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				SqlUtils.close(rs, st);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}
		return result;
	}

	public List<ItemGroup> getItemGroups(String name) { 
		List<ItemGroup> iGroups = new ArrayList<>();
		String sql = "select MaLoai, TenLoai " + " from loaihang where TenLoai= ?";

		try {
			pst = conn.prepareStatement(sql);
			pst.setString(1, name);
			rs = pst.executeQuery();
			while (rs.next()) {
				ItemGroup ig = new ItemGroup(rs.getInt(1), rs.getString(2));
				iGroups.add(ig);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				SqlUtils.close(rs, pst);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}
		return iGroups;
	}
/*
 * insert a ItemGroup
 */
	public boolean save(ItemGroup itemGroup) {
		boolean isSaved = false;
		String sql = "insert into loaihang(MaLoai, TenLoai)\n" 
						+ " values(?, ?)";

		try {

			pst = conn.prepareStatement(sql);
			// gán giá trị var
			// set values
			pst.setInt(1, itemGroup.getId());
			pst.setString(2, itemGroup.getName());
			
			isSaved = pst.executeUpdate() > 0; // row count

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				SqlUtils.close(pst);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}
		return isSaved;
	}
	
	// 3
	public List<ItemGroupDto> getItemGroups(){
		List<ItemGroupDto> result = new ArrayList<>();
		String sql = "";

		try {
			pst = conn.prepareStatement(sql);
			rs = pst.executeQuery();
			while (rs.next()) {
				ItemGroupDto ig = new ItemGroupDto();
				result.add(ig);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				SqlUtils.close(rs, pst);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}
		return result;
		
	}

}
